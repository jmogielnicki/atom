// "use strict";
//
// var chai = require('chai');
// var expect = chai.expect;
//
//
// function namespace(ns, action) {
//     const namespacedDispatch = action => {
//         const namespacedAction = Object.assign({}, action, {type: action.type + '.' + ns });
//         return this(namespacedAction);
//     }
//     namespacedDispatch.namespace = namespace;
//     if (!action) {
//         return namespacedDispatch;
//     }
//     return namespacedDispatch(action);
// }
//
// const dogodki = {
//     // getScope(obj) {
//     //     const scopeSource
//     //     return obj.context.scope && obj.props;
//     // }
//     createScope(parentScope, scopeName) {
//         return parentScope.concat(scopeName)
//     }
// };
//
// function dispatch(action) {
//     return Object.assign({}, action, {test: true});
// }
//
// describe.only('namespace', () => {
//     it('should call parent function', function () {
//         dispatch.namespace = namespace;
//         let res = dispatch.namespace('kotek')({type: 'zwierze', a: 1});
//         expect(res).deep.equal({type: 'zwierze.kotek', a: 1, test: true});
//
//         res = dispatch.namespace('kotek', {type: 'zwierze', a: 1});
//         expect(res).deep.equal({type: 'zwierze.kotek', a: 1, test: true});
//
//         res = dispatch.namespace('kotek').namespace('kicia')({type: 'zwierze', a: 1});
//         expect(res).deep.equal({type: 'zwierze.kotek.kicia', a: 1, test: true});
//
//     });
//
//
//     // beforeEach(function () {
//     //     this.obj = mocks.shift();
//     //     const copyOfOriginalObject = Object.assign({}, this.obj);
//     //     this.scope = dogodki.getScope(copyOfOriginalObject);
//     // })
//     // it('should get scope from obj.props when obj.props.scope exists', function () {
//     //     expect(this.scope).deep.equal(this.obj.props.scope);
//     // });
//     // it('should get scope from obj.props', function () {
//     //     expect(this.scope).deep.equal(this.obj.context.scope);
//     // });
//
// });
//
//
// const getScope = dogodki.getScope;
//
// const mocks = [
//     {
//         context: {
//             scope: {
//                 name: 'scope from context'
//             }
//         },
//         props: {
//             scope: {
//                 name: 'scope from props'
//             }
//         }
//     },
//     {
//         context: {
//             scope: {
//                 name: 'scope from context'
//             }
//         },
//         props: {
//             scope: {
//                 name: 'scope from props'
//             }
//         }
//     },
//
// ];
// describe('dogodki1', () => {
//
//
//     // beforeEach(function () {
//     //     this.obj = mocks.shift();
//     //     const copyOfOriginalObject = Object.assign({}, this.obj);
//     //     this.scope = dogodki.getScope(copyOfOriginalObject);
//     // })
//     // it('should get scope from obj.props when obj.props.scope exists', function () {
//     //     expect(this.scope).deep.equal(this.obj.props.scope);
//     // });
//     // it('should get scope from obj.props', function () {
//     //     expect(this.scope).deep.equal(this.obj.context.scope);
//     // });
//
// });
